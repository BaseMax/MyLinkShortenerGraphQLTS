# types 
type Shortner {
  id: ID
  alias: String
  destinationUrl: String
  shortUrl: String
  expirationDate: String
  isactive: Boolean
}

type DeleteUrlRes {
  id: ID!
  deleted: Boolean!
}

type GenerateQRcodeRes {
  id: ID!
  QRcodeUrl: String!
}

# inputs
input CreateShortnerInput {
  alias: String!
  destinationUrl: String!
  expirationDate: String
  shortUrl: String
}

input UpdateShortnerInput {
  id: ID!
  alias: String!
  destinationUrl: String!
  expirationDate: String
}

# query
type Query {
  getAllLinks(limit: Int!, page: Int!): [Shortner]!
}

# mutation
type Mutation {
  createShortUrl(cs: CreateShortnerInput!): Shortner!
  updateShortUrl(cs: UpdateShortnerInput!): Shortner!
  deleteUrl(shortUrlId: ID!): DeleteUrlRes!
  generateQRcode(linkId: ID!): GenerateQRcodeRes!
  toggleLinkActivation(linkId: ID!, activate: Boolean!): Shortner!
}
