# types 
type Shortner {
  id: ID
  alias: String
  destinationUrl: String
  shortUrl: String
  expirationDate: String
  isactive: Boolean
  view: Int
}

type VisistDetails {
  id: ID!
  linkId: String!
  referrer: String!
  userAgent: String!
  ipAddress: String!
  createdAt: String!
  updatedAt: String!
}

type DeleteUrlRes {
  id: ID!
  deleted: Boolean!
}

type GenerateQRcodeRes {
  id: ID!
  QRcodeUrl: String!
}

# inputs
input CreateShortnerInput {
  alias: String!
  destinationUrl: String!
  expirationDate: String
  shortUrl: String
}

input UpdateShortnerInput {
  id: ID!
  alias: String!
  destinationUrl: String!
  expirationDate: String
}

input TrackLinkInput {
  linkId: ID!
  referrer: String!
  userAgent: String!
  ipAddress: String!
}
# query
type Query {
  getAllLinks(limit: Int!, page: Int!): [Shortner]!
  getLink(id: ID!): Shortner
  getLinkbyShortenedURL(url: String!): Shortner
  getMyLinks(limit: Int!, page: Int!):  [Shortner]!
  getPopularLinks(limit: Int!):  [Shortner]!
  getLinkVisits(linkId: ID!):  [VisistDetails]!
}

# mutation
type Mutation {
  createShortUrl(cs: CreateShortnerInput!): Shortner!
  updateShortUrl(cs: UpdateShortnerInput!): Shortner!
  deleteUrl(shortUrlId: ID!): DeleteUrlRes!
  generateQRcode(linkId: ID!): GenerateQRcodeRes!
  toggleLinkActivation(linkId: ID!, activate: Boolean!): Shortner!
  trackLink(tr: TrackLinkInput!): VisistDetails!
}
